local player = game.Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local cooldownTime = 1
local abilityKey = Enum.KeyCode.B
local buttonName = "ThirdYee"
local abilityName = "Third Eye Trap"
local buttonPosition = -2

local isCooldown = false
local lastAbilityTime = 0
local cooldownDuration = cooldownTime
local tweenInfo = TweenInfo.new(cooldownTime, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)

local function initializeAbility()
    local button = player.PlayerGui.InGameUI.Bottom.Abilities["1"]:Clone()

    local function triggerAbility()
        if isCooldown then return end

        local currentTime = tick()
        if currentTime - lastAbilityTime < cooldownDuration then
            return
        end

        lastAbilityTime = currentTime
        isCooldown = true

        -- VFX appears here and lasts 3 seconds
        local vfx = game:GetObjects("rbxassetid://17390408249")[1]
        local clonedEmitters = {}

        local character = player.Character
        local football = character and character:FindFirstChild("Football")
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")

        if vfx and football and rootPart then
            for _, v in pairs(vfx:GetDescendants()) do
                if v:IsA("ParticleEmitter") then
                    local emitter1 = v:Clone()
                    emitter1.Parent = football
                    table.insert(clonedEmitters, emitter1)

                    local emitter2 = v:Clone()
                    emitter2.Parent = rootPart
                    table.insert(clonedEmitters, emitter2)
                end
            end

            task.delay(3, function()
                for _, emitter in ipairs(clonedEmitters) do
                    if emitter and emitter.Parent then
                        emitter:Destroy()
                    end
                end
            end)
        end

        -- Play animation
        local animationId = "rbxassetid://73373303523875"
        local animation = Instance.new("Animation")
        animation.AnimationId = animationId

        local humanoid = character:WaitForChild("Humanoid")
        local animationTrack = humanoid:LoadAnimation(animation)
        animationTrack.Priority = Enum.AnimationPriority.Action4
        animationTrack:Play()

        task.wait(0.3)

        -- Play sound
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://4418405082"
        sound.Volume = 5
        sound.Pitch = 1
        sound.Looped = false
        sound.PlayOnRemove = true
        sound.Parent = rootPart
        sound.TimePosition = 0.3
        sound:Play()

        -- Create effectPart
        local effectPart = Instance.new("Part")
        effectPart.Anchored = true
        effectPart.CanCollide = false
        effectPart.Transparency = 1
        effectPart.Parent = workspace

        -- Heartbeat connection to move effectPart
        local heartbeatConnection
        heartbeatConnection = RunService.Heartbeat:Connect(function()
            if not effectPart.Parent then
                if heartbeatConnection then
                    heartbeatConnection:Disconnect()
                end
                return
            end
            local forward = rootPart.CFrame.LookVector
            local effectPosition = rootPart.Position + (forward * 20)
            effectPart.CFrame = CFrame.new(effectPosition, effectPosition + forward)
        end)

        -- Create particle emitter
        local particles = {}
        do
            local particle = Instance.new("ParticleEmitter")
            particle.Color = ColorSequence.new(Color3.new(0, 1, 0))
            particle.Parent = effectPart
            particle.ShapeStyle = Enum.ParticleEmitterShapeStyle.Volume
            particle.LightInfluence = 0
            particle.Lifetime = NumberRange.new(0.1)
            particle.Size = NumberSequence.new(4.84)
            particle.Speed = NumberRange.new(60.5)
            particle.Brightness = 50
            particle.Enabled = true
            table.insert(particles, particle)
        end

        -- Disable and destroy after a short time
        task.delay(0.8, function()
            for _, particle in ipairs(particles) do
                particle.Enabled = false
            end
            task.wait(3)
            if heartbeatConnection then
                heartbeatConnection:Disconnect()
            end
            effectPart:Destroy()
        end)

        -- Shoot football
        local args = {[1] = 120}
        game:GetService("ReplicatedStorage").Packages.Knit.Services.BallService.RE.Shoot:FireServer(unpack(args))

        task.wait(0.213)

        local football = workspace:FindFirstChild("Football") and workspace.Football:FindFirstChild("Hitbox")
        local camera = workspace.CurrentCamera

        if rootPart and football then
            local camLook = camera.CFrame.LookVector
            local forwardDirection = Vector3.new(camLook.X, camLook.Y, camLook.Z).Unit

            local bv = Instance.new("BodyVelocity")
            bv.Velocity = forwardDirection * 180
            bv.MaxForce = Vector3.new(5777, 5777, 5777)
            bv.Parent = football

            task.delay(0.2, function()
                bv:Destroy()
            end)
        end

        -- Cooldown UI
        local cooldownFrame = button:FindFirstChild("Cooldown")
        local tween = TweenService:Create(cooldownFrame.UIGradient, tweenInfo, { Offset = Vector2.new(0, 1) })

        cooldownFrame.UIGradient.Offset = Vector2.new(0, 0)
        tween:Play()
        tween.Completed:Connect(function()
            isCooldown = false
            print("Cooldown finished.")
        end)

        print("Cooldown started.")
    end

    -- Setup button
    button.Name = buttonName
    button.Parent = player.PlayerGui.InGameUI.Bottom.Abilities
    button.LayoutOrder = buttonPosition
    button.Keybind.Text = abilityKey.Name
    button.Timer.Text = abilityName
    button.ActualTimer.Text = ""

    button.Activated:Connect(triggerAbility)
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == abilityKey then
            triggerAbility()
        end
    end)
end

initializeAbility()
